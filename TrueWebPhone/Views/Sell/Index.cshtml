@model IEnumerable<TrueWebPhone.Models.Product>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"]</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f5f5f5;
        }

        header {
            background-color: #333;
            color: white;
            padding: 1em;
            text-align: center;
        }

        main {
            display: flex;
            justify-content: space-between;
            padding: 20px;
        }

        #product-list {
            max-height: 400px;
            overflow-y: auto;
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            grid-gap: 20px;
        }
        #product{
            width: 60%;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        #cart {
            width: 35%;
            background-color: #fff;
            padding: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            border-radius: 8px;
        }

        .product-item {
            text-align: center;
        }

        img {
            max-width: 100%;
            height: auto;
            border-radius: 8px;
        }

        button {
            background-color: #28a745;
            color: white;
            padding: 10px 15px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            margin-top: 10px;
        }

            button:hover {
                background-color: #218838;
            }

        #cart-details {
            border-top: 1px solid #ccc;
            margin-top: 20px;
            padding-top: 20px;
            max-height: 300px;
            overflow-y: auto;
        }

        .cart-item {
            display: flex;
            align-items: center;
            justify-content: space-between;
            border-bottom: 1px solid #ccc;
            padding: 10px 0;
        }

            .cart-item img {
                max-width: 50px;
                height: auto;
                margin-right: 10px;
                border-radius: 4px;
            }

        .delete-icon {
            cursor: pointer;
            cursor: pointer;
            display: inline-block;
            background-color: #ff3333;
            color: white;
            padding: 8px;
            border-radius: 50%;
        }

        .cart-total {
            margin-top: 10px;
            font-weight: bold;
        }

        footer {
            background-color: #333;
            color: white;
            text-align: center;
            padding: 1em;
            position: fixed;
            bottom: 0;
            width: 100%;
        }

        #total-items-text {
            margin-top: 10px;
        }

        .flex-row {
            margin-top: 10px;
            display: flex;
            justify-content: space-between;
        }

        .text-start {
            order: 1; 
        }

        .text-end {
            order: 2; 
        }
    </style>
</head>
<body>
    
    <main>
        <div id = "product">
            <h2>Product List</h2>
        <div id="product-list">
                @foreach (var product in Model)
                {
                    <div class="product-item">
                        <img src="~/uploads/@product.ImagePath" alt="@product.ProductName" style="width: 5cm; height: 7cm;"><br>
                        <p>@product.ProductName - $@product.RetailPrice.ToString("0.##")</p>
                        <button class="add-to-cart-btn">Add to Cart</button>
                    </div>
                }
            
        </div>
        </div>
    
        <div id="cart">
            <h2>Shopping Cart</h2>

            <div id="cart-details" style=" height:300px">
                <!-- Cart details will be displayed here -->
            </div>

            <div class="flex-row">
                <p id="total-items-text">Total Items: 0</p>
                <p id="total-price-text">Total Price: $0.00</p>
            </div>
            <div class="flex-row">
                <label for="customer-payment">Customer Payment:</label>
                <input type="text" id="customer-payment" name="customer-payment" placeholder="Enter amount">
            </div>
            
            <button>Checkout</button>
        </div>
    </main>

    <footer>
       
    </footer>
</body>
</html>
<script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>
<script>
    $(document).ready(function () {
        $(".add-to-cart-btn").on("click", function () {
            var productInfo = $(this).siblings("p").text();
            var productPrice = parseFloat(productInfo.match(/\$([0-9,]+(\.[0-9]{1,2})?)/)[1]);
            var productName = productInfo.replace(/\s*\-\s*\$[0-9,]+(\.[0-9]{1,2})?/, "");
            var productImage = $(this).siblings("img").attr("src");

            // Check if the product already exists in the cart
            var existingCartItem = $(".cart-item").filter(function () {
                return $(this).find('.product-name').text().includes(productName);
            });

            if (existingCartItem.length > 0) {
                // Product already exists, increment the quantity
                var existingQuantity = parseInt(existingCartItem.find('.quantity').text());
                existingCartItem.find('.quantity').text(existingQuantity + 1);
            } else {
                // Product doesn't exist, add a new item to the cart
                $("#cart-details").append(
                    '<div class="cart-item">' +
                    '<img src="' + productImage + '" alt="' + productName + '" style="width: 3cm; height: 2cm;">' +
                    '<div>' +
                    '<p class="product-name">' + productName + ' - $' + productPrice.toFixed(2) + '</p>' +
                    '<p class="quantity">1</p>' + // Add a quantity field
                    '</div>' +
                    '<span class="delete-icon" onclick="removeCartItem(this)">&#128465;</span>' +
                    '</div>'
                );
            }

            // Update the total items and total price
            updateCartTotals();
        });

    });

    function removeCartItem(element) {
        if (parseInt($(element).closest(".cart-item").find('.quantity').text()) > 1) {
            $(element).closest(".cart-item").find('.quantity').text( parseInt($(element).closest(".cart-item").find('.quantity').text()) - 1 );
        } else {
            $(element).closest(".cart-item").remove();
        }
        // Update the total items and total price after removing an item
        updateCartTotals();
    }

    function updateCartTotals() {
        var totalItems = 0;
        var totalPrice = 0;

        $(".cart-item").each(function () {
            var quantity = parseInt($(this).find('.quantity').text());
            var priceText = $(this).find('.product-name').text().match(/\$([0-9,]+(\.[0-9]{1,2})?)/)[1];
            var itemPrice = parseFloat(priceText); // Extract numeric value from the text
            totalItems += quantity;
            totalPrice += itemPrice * quantity;
        });

        // Update the total items and total price in the fixed cart details
        $("#total-items-text").text("Total Items: " + totalItems);
        $("#total-price-text").text("Total Price: $" + totalPrice.toFixed(2));
    }
</script>





